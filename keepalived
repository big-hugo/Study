keepalived功能:                                   LVS(keepalived)       web1
                               client  vip     
                                                 LVS(keepalived)       web2
实现VRRP(VIP)
自动配置LVS规则
健康检查
tcp_check
http_get/SSL_GET{
  url{
    path /a.html
    digest 哈希值
  }
}

                

Keepalived高可用服务器(VRRP)
yum -y install   keepalived             安装软件
vim /etc/keepalived/keepalived.conf     修改配置文件
global_defs {
  notification_email {
    admin@tarena.com.cn                //设置报警收件人邮箱
  }
  notification_email_from ka@localhost    //设置发件人
  smtp_server 127.0.0.1                //定义邮件服务器
  smtp_connect_timeout 30
  router_id  web1                        //设置路由ID号（实验需要修改）
}
vrrp_instance VI_1 {
  state MASTER                         //主服务器为MASTER（备服务器需要修改为BACKUP）
  interface eth0                    //定义网络接口
  virtual_router_id 51                //主备服务器VRID号必须一致
  priority 100                     //服务器优先级,优先级高优先获取VIP(需要修改)
  advert_int 1
  authentication {
    auth_type pass
    auth_pass 1111                       //主备服务器密码必须一致
  }
  virtual_ipaddress {                   //谁是主服务器谁获得该VIP（实验需要修改）
    192.168.4.80                        主从配置的VIP一致
}} 
systemctl  star  keepalived         启动服务器,防火墙会跟随启动
iptables -F                         清空防火墙规则(selinux也要关闭)



Keepalived+LVS服务器
调度器
yum -y install keepalived   ipvsadm        安装软件
ipvsadm -C                                  清除所有规则(没配过可以不用)
vim /etc/keepalived/keepalived.conf         修改配置文件
global_defs {
  notification_email {
    admin@tarena.com.cn                //设置报警收件人邮箱
  }
  notification_email_from ka@localhost    //设置发件人
  smtp_server 127.0.0.1                //定义邮件服务器
  smtp_connect_timeout 30
  router_id  lvs1                        //设置路由ID号(实验需要修改)
}
vrrp_instance VI_1 {
  state MASTER                             //主服务器为MASTER（备服务器需要修改为BACKUP）
  interface eth0                        //定义网络接口
  virtual_router_id 50                    //主辅VRID号必须一致
  priority 100                         //服务器优先级
  advert_int 1
  authentication {
    auth_type pass
    auth_pass 1111                       //主辅服务器密码必须一致
  }
  virtual_ipaddress {                   //配置VIP（实验需要修改）
192.168.4.15 
 }   
}
virtual_server 192.168.4.15 80 {           //设置ipvsadm的VIP规则（实验需要修改）
  delay_loop 6
  lb_algo wrr                          //设置LVS调度算法为WRR
  lb_kind DR                               //设置LVS的模式为DR
# persistence_timeout 50               开启后，客户端在一定时间内始终访问相同服务器
  protocol TCP                          传输协议
  real_server 192.168.4.100 80 {         //设置后端web服务器真实IP（实验需要修改）
    weight 1                             //设置权重为1
    TCP_CHECK {                            //对后台real_server做健康检查
    connect_timeout 3                       超时时间三秒
    nb_get_retry 3                          连不上试三次
    delay_before_retry 3                    三秒检查一次
    }
  }
 real_server 192.168.4.200 80 {       //设置后端web服务器真实IP（实验需要修改）
    weight 2                          //设置权重为2
    TCP_CHECK {
    connect_timeout 3
    nb_get_retry 3
    delay_before_retry 3
    }
  }
}
systemctl start keepalived            启动服务(防火墙会自己启动)
iptables -F                       关闭防火墙
ipvsadm -Ln                     #查看LVS规则
ip a  s                          #查看VIP配置
echo 1 > /proc/sys/net/ipv4/ip_forward   开启路由功能(临时)
echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf     开启路由功能(永久)
后端服务器(DR模式需要地址伪装配置，其他模式不用)
cd /etc/sysconfig/network-scripts/             进入网卡配置文件目录
cp ifcfg-lo ifcfg-lo:0                         复制网卡配置文件作为VIP
vim ifcfg-lo:0                                 修改配置文件,其他没用可以删掉
DEVICE=lo:0
IPADDR=192.168.4.15                            输入VIP
NETMASK=255.255.255.255                        
NETWORK=192.168.4.15
BROADCAST=192.168.4.15
ONBOOT=yes
NAME=lo:0
vim /etc/sysctl.conf                          修改配置文件,防止地址冲突
net.ipv4.conf.all.arp_ignore = 1              当有arp广播问谁是192.168.4.15时，本机忽略该ARP广播，不做任何回应(默认0)
net.ipv4.conf.lo.arp_ignore = 1               
net.ipv4.conf.lo.arp_announce = 2             本机不要向外宣告自己的lo回环地址是192.168.4.15(默认值为0,1尽量不宣告)
net.ipv4.conf.all.arp_announce = 2
sysctl -p                                     刷新配置文件
systemctl stop  NetworkManager                关闭网络管理器(这两个服务会抢着管理,要关掉一个)
systemctl restart network                     重启网络服务


同时服务于 LVS-DR，又要做为数据库的后端。所以我们要注意，只接收一个 director 的数据包。
这时我们在 Director1 中设置($MAC_Director2 是指我在 Director1 上所能见到从 Director2 发过来包的 MAC 地址) :
iptables  -t mangle -I PREROUTING -d $VIP -p tcp -m tcp --dport $VPORT -m mac ! --mac-source $MAC_Director2 -j MARK --set-mark 0x3
并在备份的 keepalived 的服务器 Director2 中设置:
iptables  -t mangle -I PREROUTING -d $VIP -p tcp -m tcp --dport $VPORT -m mac ! --mac-source $MAC_Director1 -j MARK --set-mark 0x4
$VIP 为VIP地址
$VPORT 为服务端口
$MAC_Director1 是主 的MAC (keepalived 之间互相监听的那块网卡)
$MAC_Director2 是备机的MAC (keepalived 之间互相监听的那块网卡)
iptables -t mangle --lis            查看添加的规则是否生效
service iptables save               保存iptables规则
service iptables restart            重启iptables服务
cat /etc/sysconfig/iptables         查看当前规则
接着在 keepalived 中分别配置这二个
virtual_server fwmark 3  {  # 另一台备库是fwmark 4
    delay_loop 10
    lb_algo rr
    lb_kind DR
    protocol TCP
    real_server 192.168.1.213 3306 {
    weight 1
    MISC_CHECK {
        misc_path &quot;/etc/keepalived/check_slave.pl 192.168.1.213&quot;
        misc_dynamic
    }
    }
    real_server 192.168.1.233 3306 {
    weight 1
    MISC_CHECK {
        misc_path &quot;/etc/keepalived/check_slave.pl 192.168.1.233&quot;
        misc_dynamic
        }
    }
}
详情请看https://blog.csdn.net/wzyzzu/article/details/47277533







