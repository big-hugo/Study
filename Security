linux权限管理
权限: r(4) 读取   w(2) 写入  x(1) 执行  
权限对象: u 属主   g 属主  o 其他人
权限匹配顺序: u > g > o   匹配及停止
ls -ld   文档              查看文档信息
d rwx r-x r-x     (d目录,-文件,l快捷方式)  所有者  所属组  其他人
chmod 权限对象+-=权限  文档    修改文档权限
chown  所有者:所属组   文档    修改文档归属
特殊权限: g+S   新增的子文档自动继承父目录属组
         u+s   多用于执行文件,让使用者用于属主身份
         o+t   适用于开发w权限的目录,禁止操作别人的文档

LDAP认证
账号统一认证,在LDAP服务器上的用户可在其他服务器登录.用户家目录需要挂载到本地
yum -y install sssd
authconfig-tui
[*]Use LDAP  [*]使用LDAP认证 next
[*]Use TLS   server:classroom.example.com
Base DN:dc=example,dc=com
/etc/openldap/cacerts      证书加密下载地址
systemctl restart(enable) sssd      重启sssd服务(开机自启)
autofs自动挂载LDAP家目录
yum -y install autofs
mkdir /home/guests
vim /etc/auto.master       指定监控点(家目录的父目录
/home/guests  /etc/guests.rule
vim /etc/guests.rule       配置挂载策略
用户名 -rw 来源家目录 (用户名为*表示任何用户)
systemctl restart(enable) autofs

Linux密码破解
1. 启动系统GRUB界面按e进入编辑界面
2. 在linux16行尾添加 rd.break console=tty0      
3. ctrl+x  输入mount -o remount,rw /sysroot/    回车,读写方式重挂载根系统
4. chroot /sysroot/   回车,切换到根目录  
5. passwd 用户名 或 echo 密码 | passwd --stdin 用户名    修改密码
6. touch /.autorelabel     标记一次启动重做selinux标签
7. exit
8. reboot
 
ACL策略
setfacl [-R] -m u:用户名:权限 文档     为单独个人分配权限,权限表后有+号(-R 递归分配权限)
getfacl 文档                 获取文件acl信息
setfacl [-R] -b 文档         清除文档所有acl权限分配(-R 递归)
setfacl -x u:用户名 文档      清除一个acl权限 

伪装登录(用于隐藏系统和内核版本)
vim /etc/issue              本地登录提示文件
vim /etc/issue.net          远程登录提示文件

文件系统安全
chkconfig  httpd  off/on    RHEL6系统服务操作命令
systemctl  enable/disable  httpd    RHEL7系统服务操作命令
锁定/解锁保护文件(root用户同样受到限制)
EXT3/EXT4的文件属性控制  属性i:不可变  属性a:仅可追加
chatte  +a   文件     设置对文件属性(+-=可用)
lsattr [-l]  文件     查看文件属性

selinux
三大保护策略:安全上下文,布尔值,端口
selinux运行模式:enforcing 强制模式   permissive 宽松模式  disabled 彻底禁用,需要重启机器
vim /etc/sysconfig/selinux    主配置文件
SELINUX=disabled              定义默认启用模式
SELINUXTYPE=targeted          定义默认策略集
getenforce           查看selinux是否开启
sestatus             查看selinux状态
setenforce   1/0     开启/关闭selinux(临时)
安全上下文
移动的文件,原有安全上下文不变;新建/复制的文件,自动继承目标位置的上下文
属性构成   system_u:object_r:admin_home_t:s0      用户:角色:访问类型:选项...
ls -lZ  文件          查看安全上下文
ls -ldZ /etc         查看安全上下文
ps -aux -Z | grep 进程名       查看安全上下文
chcon -t  访问类型  [-R]  文件  修改文件上下文访问类型(-R递归)
restorecon  [-R]  文件         恢复所在位置默认上下文属性(-R递归)  
touch  /.autorelabel          创建该文件,下次重启系统全部恢复上下文属性
布尔值(功能开关)
getsebool -a          查看所有配置项布尔值
setsebool -P  配置项名称 on/off      开/关布尔值

MD5数值校验
根据输入的文件生成不同的哈希值,可通过对比哈希值检测文件是否有变化
md5sum  文件            生成哈希值

GPG加/解密工具
gpg --version           查看软件版本信息
gpg对称加密与解密
gpg -c 文件             设置密码
file  文件*              查看加密后文件(加密后会生成文件.gpg)
gpg -d  加密后文件  >  输出到文档      解密文档(不同用户需要输入密码)
gpg非对称加密与解密
(mv /dev/random /dev/random.bak    如果启动不了或过慢
ln -s /dev/urandom /dev/random    执行这两部操作进行内存调整)
gpg --gen-key           创建秘钥对(秘钥对存放在~/.gnupg/)
gpg --list-keys         查看秘钥信息
gpg --export -a  >  用户名.pub       生成公钥文件(发送给目标用户)
gpg --import 用户名.pub              导入公钥文件
gpg -e -r 公钥用户名   文件           用公钥给文件加密(生成文件.gpg)
gpg -d  加密文件         解密文档(输入公钥设置的密码)
gpg数字签名与验证签名(私钥文件签名 公钥文件验证签名)
gpg -b 文件              给文件作签名(生成文件.sig)
gpg --import 用户名.pub              导入公钥文件
gpg --verify  文件       检验签名(没修改会提示完好签名)

AIDE入侵检测系统
yum -y install aide     安装软件包
vim /etc/aide.conf      主配置文件 
3 @@define DBDIR /var/lib/aide            数据库目录
4 @@define LOGDIR /var/log/aide           日志目录
7 database=file:@@{DBDIR}/aide.db.gz      数据库文件名
54 FIPSR = p+i+n+u+g+s+m+c+acl+selinux+xattrs+sha256   检测的策略名=检测项目
98 /root/    FIPSR     用FIPSR检测策略检测root目录
aide --init             初始化检测(记录当前系统检测情况)
mv  /var/lib/aide/aide.db.new.gz  /var/lib/aide/aide.db.gz  数据备份(一般备份到移动设备)
aide --check            检测对比信息(与初始化检测的文件作对比)

日志管理
由系统服务rsyslog统一管理和记录,日志消息等级0~7,数值越小越紧急
/var/log/messages     记录内核,各种服务           /var/log/maillog      记录邮件收发
/var/log/dmesg        记录系统启动过程            /var/log/secure       记录访问限制相关
/var/log/cron         记录cron计划任务
user      查看已登录用户信息
who       查看已登录用户信息
w         查看已登录用户信息
last      查看登录成功用户记录
lastb     查看登录失败用户记录

扫描与抓包
主流扫描软件:Scan主动监测,Sniff被动监听/嗅探,Capture数据包捕获(抓包),NMAP强大的网络探测利器工具
NMAP扫描软件
用法格式:   nmap  [扫描类型]  [选项]  扫描目标...
扫描类型:  -sS TCP-SYN扫描(半开,DDOS攻击原理)    -sT  TCP连接扫描(全开,默认)   -sU  UDP扫描   -sP  ICMP扫描  -A 目标系统全面解析
选项:     -p 扫描指定端口     -n 不执行dns扫描(速度更快)
yum -y install nmap       安装软件
nmap -p 21-80   192.168.4.0/24     扫描4网段的主机指定端口
nmap -n 192.168.4.0/24    扫描4网段有多少主机开启
nmap www.baidu.com        扫描百度的服务端口
tcpdump抓包命令
yum -y install tcpdump    安装软件
用法格式: tcpdump   [选项]   [过滤条件]
选项: -i 指定监控的网络接口  -A 转为ACSII码方便阅读  -w 将数据包信息保存到指定文件  -c 定义抓包个数  -r 从指定文件读取数据包信息
过滤条件: 类型host net port portrange  方向src dst  协议tcp udp ip wlan arp  多个条件组合and or not
tcpdump -i  网卡名称       指定网卡抓包
tcpdump -c 2 -w x.cap     抓两个包保存到x.cap文件
tcpdump -r x.cap          读取x.cap文件
tcpdump -i eth0 -A tcp port 22 and host 172.121.213.105 or host 172.121.213.111     查看是否有来自该IP的连接
tcpdump -A dst host 192.168.4.5 and tcp port 110          按条件抓取POP3的数据包(可查看账号密码)
tcpdump  -A  -w ftp.cap host 192.168.4.254 and port 21    把来自254接收端口21的包信息保存到ftp.cap
tcpdump  -A -r ftp.cap | egrep '(USER|PASS)'    过滤抓到包的用户信息
WireShark图形环境抓包软件
yum -y install wireshark wireshark-gnome    安装软件包
wireshark       运行软件

系统审计
基于事先配置好的规则生成日志,用于发现并记录违反安全策略的人及其对应的行为
yum  -y install  audit              安装软件包    
systemctl start auditd.service      启动服务
systemctl enable auditd.service     设定开机自启
vim  /etc/audit/auditd.conf         主配置文件
log_file = /var/log/audit/audit.log       日志文件
auditctl -s                         查询审计状态
auditctl -l                         查看审计规则
auditctl -D                         删除所有规则
auditctl -w  文档  -p [r,w,x,a]  -k  规则名          定义临时审计规则
auditctl -w  /etc/passwd  -p wa -k  passwd_change  定义临时审计规则(审计/etc/passwd是否被写入,属性是否修改,规则名为passwd_change)
auditctl -w /etc/selinux/ -p wa -k selinux_chage   定义临时审计规则(审计/etc/selinux是否被写入,属性是否修改,规则名为selinux_change)
auditctl -w /usr/sbin/fdisk -p x -k fdisk_parition
vim /etc/audit/rules.d/audit.rules        定义永久审计规则
-w /etc/passwd -p wa -k passwd_change     追加到配置文件
-w /etc/selinux -p wa -k selinux_chage    追加到配置文件
ausearch -k 规则名 [-i]               查看规则日志(success事件是否成功,auid是审核用户的id,comm执行的指令,exe实际程序路径)
aureport                             审计信息报表

服务安全
nginx服务安全
防止别人进入网站目录下查看服务器的网页
./configure --without-http_autoindex_modul && make && make install    关闭模块
隐藏nginx服务版本
curl -I ip或域名         查看网页服务器信息(可显示出版本)
vim /nginx-1.12.2/src/http/ngx_http_header_filter_module.c    修改源文件  
50 static u_char ngx_http_server_full_string[] = "Server: 自定义" CRLF;   修改版本信息
./configure && make && make install     重新编译安装
限制并发(1台客户端的并发连接数量),降低DDos攻击风险
vim /usr/local/nginx/conf/nginx.conf    修改配置文件
http {
limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;    定义一个10m的储存空间,每秒处理一个请求
server {
 limit_req zone=one burst=5;              储存空间储存5个请求
 ab -c 客户数 -n 请求数 http://127.0.0.1/       并发量测试
拒绝非法请求
vim /usr/local/nginx/conf/nginx.conf    修改配置文件
server{
    if($require_method !~ ^(GET|POST)$){        匹配GET|POST请求
      return 444;                        返回444 
curl -i -X HEAD http://127.0.0.1/        测试配置(空返回值)
数据库服务安全
数据库初始化安全脚本
mysql_secure_installation                命令行输入启动安全脚本回车
Change the password for root ?           需要修改root密码?
Remove anonymous users?                  删除匿名账户?
Disallow root login remotely?            允许root远程登录?
Remove test database and access to it?   删除测试库?
Reload privilege tables now?             刷新权限表?
抓包验证数据库服务器能否被访问
tcpdump -w log -i eth0 src or dst port 3306
删除记录历史文件
history -c    清除当前终端历史命令
rm  -rf  ~/.bash_history      清除系统所有历史命令
rm  -rf  ~/.mysql_history     清除数据库所有历史命令
tomcat服务安全
隐藏软件版本
 curl -I http://192.168.4.50:8080         查看网页服务器版本
 yum -y install java-1.8.0-openjdk-devel  安装jar
 jar -xf /tomcat/org/apache/catalina.jar  解压包
 vim lib/org/apache/catalina/util/ServerInfo.properties   修改源文件
 server.info=自定义      修改版本信息
 bin/shutdown.sh        关闭服务
 bin/startup.sh         开启服务
健全运行
useradd tomcat            系统添加用户
chown -R tomcat /usr/local/tomcat       授权
su -  -c "/usr/local/tomcat/bin/startup.sh" tomcat        以tomcat用户运行启动命令

linux创建补丁文件
diff逐行比较
diff [选项]  文件1 文件2              文档对比
-u 输出统一内容的头部信息(打补丁使用)
-r 递归对比目录中的所有资源(可以对比目录)
-a 所有文件视为文本(包括二进制程序)
-N 无文件视为空文件(空文件怎么变成第二个文件)
diff [选项]  文件1 文件2  >  补丁文件   生成补丁文件
patch打补丁
yum -y install patch        安装软件
patch -p数字 < 补丁文件       给文件打补丁(数字代表删除补丁文件中多少层路径前缀,0代表在补丁文件所在路径)
patch -RE < 补丁文件         反向修复(撤回)

防火墙
RHEL7  firewalld(默认),但底层还是调用包过滤防火墙iptables   
RHEL6和5  iptables           
iptables基本用法
防火墙服务的组成: raw状态跟踪表     mangle包标记表     nat地址转换表      filter过滤表(默认)
链: INPUT进入防火墙主机的包   OUTPUT从防火墙主机出去的包   FORWARD从防火墙主机经过的包  
    POSTROUTING路由后处理    PREROUTING路由前处理 
选项: -L列出所有规则条目 -A链末尾追加规则 -I指定编号插入规则 -D清除指定编号 -F清除所有 -n数字形式显示 --line-numbers以编号显示  
     -P为指定的链设置默认规则(ACCEPT|DROP)
条件: -p 协议名  -i 收数据的网卡  -o 发数据的网卡  --sport 源端口  --dport 目标端口  -s 源地址  -d 目标地址 
     --icmp-type ICMP类型(echo-request|echo-reply )       需要取反时,用!号;顺序比对,匹配及停止(LOG除外)
目标操作:ACCEPT允许通过   DROP直接丢弃,不给出回应  REJECT拒绝通过,必要时给出提示  LOG记录日志,然后传给下一条规则
iptables  [-t 表名]  选项  [链名]  [条件]  [-j 目标操作]
yum -y install iptables-services     安装软件
systemctl start iptables.service     启动服务(顺带开机自启enable)
iptables-save > /etc/sysconfig/iptables        永久保存防火墙规则
自定义防火墙规则
主机型防火墙
iptables -t filter -A INPUT -p tcp --dport 22 -j ACCEPT     追加规则允许22端口tcp类型的数据通过
iptables -t filter -P INPUT  DROP                           把filter表INPUT链的默认规则设为DROP
iptables -t filter  -I INPUT 2 -p tcp --dport 80 -s 192.168.4.0/24 -j ACCEPT  插入filter表编号为2的规则允许来自4网段进入80端口
iptables -t filter -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT    追加规则允许ping的回应包进入
网络型防火墙(适用于作网络交换机的服务器)
echo 1 >   /proc/sys/net/ipv4/ip_forward && sysctl -p     开启路由功能
iptables -t filter -P FORWARD DROP        默认拒绝经过的数据包
iptables -t filter -A FORWARD -p icmp -j ACCEPT   添加规则允许icmp协议数据包通过(ping是icmp协议)
iptables -t filter -A FORWARD -p tcp --dport 80 -j ACCEPT     添加规则允许80端口的数据包流出
iptables -t filter -A FORWARD -p tcp --sport 80 -j ACCEPT     添加规则允许80端口的数据包流入
iptables -t filter -A FORWARD -p tcp --dport 22 -j ACCEPT     添加规则允许22端口的数据包流出
iptables -t filter -A FORWARD -p tcp --sport 22 -j ACCEPT     添加规程允许22端口的数据包流如
扩展匹配
-m mac -mac-source MAC地址   
arp -a    查看服务器记录的MAC地址
iptables -t filter  -I FORWARD 3 -p icmp -m mac --mac-source 52:54:00:a5:96:66 -j DROP
-m multiport --sports 源端口列表
iptables -t filter  -A FORWARD -p tcp -m multiport --sports 22,80 -j ACCEPT
-m multiport --dports 目标端口列表
iptables -t filter  -A FORWARD -p tcp -m multiport --dports 22,80 -j ACCEPT
-m iprange --src-range 来源IP1-IP2
iptables -t filter  -I FORWARD  3 -p icmp -m iprange --src-range 192.168.2.50-192.168.2.60 -j REJECT
-m iptange --dst-range 目标IP1-IP2
nat表的使用(使用nat表做数据包中原地址转换 实现所有主机共享同一个公网ip地址)
iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -p tcp --dport 80 -j SNAT --to-source 192.168.4.51  把2网段转换为公网地址4.51
公网地址是服务上动态分配时,定义防火墙规则
iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -p tcp --dport 80 -o eth0 -j MASQUERADE  

firewall防火墙
防火墙规则:查看请求的数据包中,客户端来源IP地址,查看自己所有区域规则,如果某一个区域有该源IP地址的规则,则进入该区域
数据包结构:源IP地址-目标IP地址-目标端口号-数据
防火墙区域:public  仅允许访问sshd dhcp ping
         trusted 允许任何访问
         block   拒绝访问
         drop    丢弃来访数据包
命令:firewall-config  &                           图形界面配置防火墙
    firewall-cmd  --get-default-zone             查看默认区域
    firewall-cmd  --set-default-zone=区域         设置默认区域
    firewall-cmd  --zone=区域  --list-all         查看区域规则
    firewall-cmd  --zone=区域  --add-service=协议  添加协议到区域里
    firewall-cmd  --permant ...                   使配置永久生效 (需要重载)
    firewall-cmd  --reload  ...                   重新加载防火墙配置
    firewall-cmd --zone=区域 --add-forward-port=port=5423:proto=tcp:toport=80  端口重定向转发(把访问5423的数据转到80)





