mysql初始化
grep password /var/log/mysqld.log    第一次启动时,mysql会自动为root账户配置随机密码,我们需要通过日志查看该密码
mysql  -u用户  -p'密码'        登录数据库
set global validate_password_policy=0;  //(0验证长度);(默认值1长度,数字.大写,小写,特殊符号);(2长度;数字、大写小写,特殊符号;字典文件)
set global validate_password_length=6;  //修改密码长度,默认值是8个字符
alter user user() identified by "123456";  //修改登陆密码
vim /etc/my.cnf             //修改配置添加如下内容,永久设置密码验证
validate_password_policy=0
validate_password_length=6


数据库基本管理
mysql [-h服务器IP或域名  -u用户名   -p密码   数据库名称]    连接MySQL数据库的命令语法格式
show database;           查看数据库
use 库名;                 切换数据库
select database();       查看当前数据库
create databases 库名 character set utf8mb4;   创建数据库支持中文(数字、字母、下划线,不能纯数字;区分大小写;不能使用关键词或特殊符号)
drop  database  库名;     删除数据库
drop datebase  库名.表名;  删除表
create table 库名.表名(字段  char(20),...);    创建表 (not null非空,default '默认值')  
desc 库名.表名;           查看表结构
insert    into   库名.表名(字段,字段...)  values('','',...);    插入数据,不输入字段默认给全部字段赋值
update  库名.表名   set 字段=''  where 字段='';    更新数据
delete from 库名.表名  where  字段='';            删除数据
show index from 表名\G;          查看表索引(\G竖显示表格)
show create table 表名\G;        查看建表记录

表结构(字段约束条件,控制字段赋值)
create table test(
id int(3) primary key ,                 定义主键
tel char(15) not null,                  定义非空
name char(6) default 'OYZH',            定义默认值
index(id,name)                          定义索引
engine=innodb);                         定义数据引擎类型为innodb


key键值:
普通索引  index         增加查询速度,降低删改查速度,占用物理空间记录排队信息,多用于需要查询的字段.算法类型(默认Btree,B+tree,hash)
index(id,name));                       定义索引
show index from 表名\G;          查看表索引(\G竖显示表格)
create index 索引标记 on 表名(字段);      创建索引
drop index 索引标记 on 表名;              删除索引

唯一索引  unique
全文索引  fulltext

主键     primary key   唯一性,非空,多字段为主键称为复合主键,必须一起创建
id int(3) primary key ,                 定义主键
primary key(id,name)                   定义复合主键
id int primary key auto_increment      定义自增长主键(删除所有也会记录上一个值,可以自插入id)
alter table 表名 add primary key(字段);   添加主键
alter table 表名 drop primary key;       删除主键

外键     foreign key    插入记录时,字段值在另一个表字段值范围内选择,类型要一致,被参考必须是索引的一种,表储存引擎必须是innodb
create table 表名( id int ,               定义字段
foreign key(字段) references 表名(字段)    定义外键
on update cascade on delete cascade      同步更新,同步删除
)engine=innodb;                          指定存储引擎
show create table 表名\G;                    查看外键
alter table 表名 drop  foreign key 外键名;    删除外键


表结构编辑常用的语法格式如下：
ALTER TABLE <表名> [修改选项]   {after 列名 | first}  调整位置
修改选项的语法格式如下：
 ADD  <列名> <类型>
 CHANGE  <旧列名> <新列名> <新列类型>
 ALTER  <列名> { SET DEFAULT <默认值> | DROP DEFAULT }
 MODIFY  <列名> <类型>
 DROP  <列名>  , <列名>
 RENAME  <新表名> 








常用的SQL命令分类:
DDL数据定义语言(create,alter,drop)
DML数据操作语言(insert,update,delete)
DCL数据控制语言(grant,revoke)
DTL 数据事务语言(commit,rollback,savepoint)

数据类型
char(字符数)            固定长度,最大长度255字符,不够指定的字符数时自动在右边填补空格,超出指定字符数则无法写入。
varchar(字符数)        可变长度,根据实际数据大小分配存储空间,超出指定字符数则无法写入。
text/blob             字符数大于65535时使用。
               范围       范围(无符号)    使用 unsigned 标记无符号存储 标记无符号存储 create table test2(id int unsigned);
tinyint      -128~127      0~255       微小整数
smallint    -32768~32767   0~65535     小整数
mediumint    -2^23~2^23-1  0~2^24-1    中整数
int          -2^31~2^31-1  0~2^32-1    大整数
bigint       -2^63~2^63-1  0~2^64-1    极大整数
float        -2^31~2^31-1  0~2^32-1    单精度浮点数(M,D)其中 M 为总位数宽度,D 为小数位数,M 应大于 D
double       -2^63~2^63-1  0~2^64-1    双精度浮点数(M,D)
datetime日期时间类型   范围1000-01-01 00:00:00:000000~9999-12-31 23:59:59.999999  如果不给该类型的数据赋值,则默认为NULL
timestamp日期时间类型  范围1970-01-01 00:00:00:000000~2038-01-19 03:14:07.999999   如果不给该类型的数据赋值,则mysql自动为其分配当前的系统时间
date日期类型           范围0001-01-01~9999-12-31     时间格式:YYYYmmddhhmmss,或者"YYYY-mm-dd hh:mm:ss"
year年份类型           范围1901-2155
time时间类型           范围HH:MM:SS
enum(值1,值2,值3...)       枚举类单选项,值只能从里面的值选择一项   
set(值 1,值 2,值 3...)     枚举类多选项,值只能从里面的值选择多项


内置函数
select curtime();         获得当前系统时间
select curdate();         获得当前系统日期
select now(),sysdate();   获得系统当前日期和时间
